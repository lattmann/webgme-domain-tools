[
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.Fixed",
        "components": [
            {
                "comment": "Fixed flange",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "s0",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Fixed offset position of housing"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Components.Fixed",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.Mass",
        "components": [
            {
                "comment": "Sliding mass with inertia",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"Mass\"",
                            "unit": "\"kg\"",
                            "min": "0"
                        },
                        "name": "m",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Mass of the sliding mass"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.default",
                        "fullName": "StateSelect",
                        "description": "Priority to use s and v as states"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialRigid",
                        "modifiers": {
                            "s.start": "0",
                            "s.stateSelect": "stateSelect"
                        },
                        "redeclare_parameters": [],
                        "parameters": [
                            {
                                "modifiers": {},
                                "name": "L",
                                "isCyPhySafe": true,
                                "isPublic": true,
                                "value": "0",
                                "fullName": null,
                                "description": ""
                            }
                        ]
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.Mass",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Rigid connection of two translational 1D flanges",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "0",
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "L",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Length of component, from left flange to right flange (= flange_b.s - flange_a.s)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialRigid",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.Rod",
        "components": [
            {
                "comment": "Rod without inertia",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialRigid",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.Rod",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Rigid connection of two translational 1D flanges",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "0",
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "L",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Length of component, from left flange to right flange (= flange_b.s - flange_a.s)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialRigid",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.Spring",
        "components": [
            {
                "comment": "Linear 1D translational spring",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"TranslationalSpringConstant\"",
                            "unit": "\"N/m\"",
                            "min": "0"
                        },
                        "name": "c",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Spring constant"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "s_rel0",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Unstretched spring length"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliant",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.Spring",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Compliant connection of two translational 1D flanges",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliant",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.Damper",
        "components": [
            {
                "comment": "Linear 1D translational damper",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "0",
                            "quantity": "\"TranslationalDampingConstant\"",
                            "unit": "\"N.s/m\"",
                            "min": "0"
                        },
                        "name": "d",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Damping constant"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.Damper",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for the compliant connection of two translational 1-dim. shaft flanges where the relative position and relative velocities are used as states",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "s_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of s_rel (used for scaling)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.SpringDamper",
        "components": [
            {
                "comment": "Linear 1D translational spring and damper in parallel",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"TranslationalSpringConstant\"",
                            "unit": "\"N/m\"",
                            "min": "0"
                        },
                        "name": "c",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Spring constant"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"TranslationalDampingConstant\"",
                            "unit": "\"N.s/m\"",
                            "min": "0"
                        },
                        "name": "d",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Damping constant"
                    },
                    {
                        "modifiers": {
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "s_rel0",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Unstretched spring length"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.SpringDamper",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for the compliant connection of two translational 1-dim. shaft flanges where the relative position and relative velocities are used as states",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "s_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of s_rel (used for scaling)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.ElastoGap",
        "components": [
            {
                "comment": "1D translational spring damper combination with gap",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"TranslationalSpringConstant\"",
                            "unit": "\"N/m\"",
                            "min": "0"
                        },
                        "name": "c",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Spring constant"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"TranslationalDampingConstant\"",
                            "unit": "\"N.s/m\"",
                            "min": "0"
                        },
                        "name": "d",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Damping constant"
                    },
                    {
                        "modifiers": {
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "s_rel0",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Unstretched spring length"
                    },
                    {
                        "modifiers": {
                            "min": "1"
                        },
                        "name": "n",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "Exponent of spring force ( f_c = -c*|s_rel-s_rel0|^n )"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.ElastoGap",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for the compliant connection of two translational 1-dim. shaft flanges where the relative position and relative velocities are used as states",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "s_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of s_rel (used for scaling)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.SupportFriction",
        "components": [
            {
                "comment": "Coulomb friction in support",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "f_pos",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,1]",
                        "fullName": "Real",
                        "description": "[v, f] Positive sliding friction characteristic (v>=0)"
                    },
                    {
                        "modifiers": {
                            "min": "1"
                        },
                        "name": "peak",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "peak*f_pos[1,2] = Maximum friction force for v==0"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialFriction",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.SupportFriction",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with one translational 1-dim. shaft flange and a support used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupport",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Support",
                        "modifiers": {
                            "modifications": "public",
                            "s": "s_support",
                            "f": "-flange_a.f - flange_b.f"
                        },
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model of Coulomb friction elements",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"m/s\"",
                            "quantity": "\"Velocity\""
                        },
                        "name": "v_small",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.001,
                        "fullName": "Real",
                        "description": "Relative velocity near to zero (see model info text)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialFriction",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.Brake",
        "components": [
            {
                "comment": "Brake based on Coulomb friction",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "mue_pos",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,0.5]",
                        "fullName": "Real",
                        "description": "[v, f] Positive sliding friction characteristic (v>=0)"
                    },
                    {
                        "modifiers": {
                            "min": "1"
                        },
                        "name": "peak",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "peak*mue_pos[1,2] = Maximum friction force for v==0"
                    },
                    {
                        "modifiers": {
                            "min": "0"
                        },
                        "name": "cgeo",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "Geometry constant containing friction distribution assumption"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"Force\"",
                            "unit": "\"N\"",
                            "min": "0"
                        },
                        "name": "fn_max",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Maximum normal force"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "f_normalized",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialFriction",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.Brake",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with one translational 1-dim. shaft flange and a support used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupport",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Support",
                        "modifiers": {
                            "modifications": "public",
                            "s": "s_support",
                            "f": "-flange_a.f - flange_b.f"
                        },
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model of Coulomb friction elements",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"m/s\"",
                            "quantity": "\"Velocity\""
                        },
                        "name": "v_small",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.001,
                        "fullName": "Real",
                        "description": "Relative velocity near to zero (see model info text)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Translational.Interfaces.PartialFriction",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.IdealGearR2T",
        "components": [
            {
                "comment": "Gearbox transforming rotational into translational motion",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Components.IdealGearR2T",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.IdealGearR2T",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Gearbox transforming rotational into translational motion",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"rad/m\""
                        },
                        "name": "ratio",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Transmission ratio (flange_a.phi/flange_b.s)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.IdealGearR2T",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to transform rotational into translational motion",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupportR",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if rotational support flange enabled, otherwise implicitly grounded"
                    },
                    {
                        "modifiers": {},
                        "name": "useSupportT",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if translational support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flangeR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flangeT",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportT",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Translational.Components.IdealRollingWheel",
        "components": [
            {
                "comment": "Simple 1-dim. model of an ideal rolling wheel without inertia",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Components.IdealRollingWheel",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Translational.Components.IdealRollingWheel",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Simple 1-dim. model of an ideal rolling wheel without inertia",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "0.3",
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "radius",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Wheel radius"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.IdealRollingWheel",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to transform rotational into translational motion",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupportR",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if rotational support flange enabled, otherwise implicitly grounded"
                    },
                    {
                        "modifiers": {},
                        "name": "useSupportT",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if translational support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flangeR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flangeT",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportT",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.Inertia",
        "components": [
            {
                "comment": "1D-rotational component with inertia",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"MomentOfInertia\"",
                            "unit": "\"kg.m2\"",
                            "min": "0"
                        },
                        "name": "J",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Moment of inertia"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.default",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi and w as states"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Components.Inertia",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.Disc",
        "components": [
            {
                "comment": "1-dim. rotational rigid component without inertia, where right flange is rotated by a fixed angle with respect to left flange",
                "parameters": [
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "deltaPhi",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Fixed rotation of left flange with respect to right flange (= flange_b.phi - flange_a.phi)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialTwoFlanges",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.Disc",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with two rotational 1-dim. shaft flanges",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialTwoFlanges",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.Spring",
        "components": [
            {
                "comment": "Linear 1D rotational spring",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "100000.0",
                            "quantity": "\"RotationalSpringConstant\"",
                            "unit": "\"N.m/rad\"",
                            "min": "0"
                        },
                        "name": "c",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Spring constant"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "phi_rel0",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Unstretched spring angle"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliant",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.Spring",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for the compliant connection of two rotational 1-dim. shaft flanges",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliant",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.Damper",
        "components": [
            {
                "comment": "Linear 1D rotational damper",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "0",
                            "quantity": "\"RotationalDampingConstant\"",
                            "unit": "\"N.m.s/rad\"",
                            "min": "0"
                        },
                        "name": "d",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Damping constant"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.Damper",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for the compliant connection of two rotational 1-dim. shaft flanges where the relative angle and speed are used as preferred states",
                "parameters": [
                    {
                        "modifiers": {
                            "displayUnit": "\"rad\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\"",
                            "min": "0.0"
                        },
                        "name": "phi_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of phi_rel (used for scaling)"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.SpringDamper",
        "components": [
            {
                "comment": "Linear 1D rotational spring and damper in parallel",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "100000.0",
                            "quantity": "\"RotationalSpringConstant\"",
                            "unit": "\"N.m/rad\"",
                            "min": "0"
                        },
                        "name": "c",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Spring constant"
                    },
                    {
                        "modifiers": {
                            "start": "0",
                            "quantity": "\"RotationalDampingConstant\"",
                            "unit": "\"N.m.s/rad\"",
                            "min": "0"
                        },
                        "name": "d",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Damping constant"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "phi_rel0",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Unstretched spring angle"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.SpringDamper",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for the compliant connection of two rotational 1-dim. shaft flanges where the relative angle and speed are used as preferred states",
                "parameters": [
                    {
                        "modifiers": {
                            "displayUnit": "\"rad\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\"",
                            "min": "0.0"
                        },
                        "name": "phi_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of phi_rel (used for scaling)"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.ElastoBacklash",
        "components": [
            {
                "comment": "Backlash connected in series to linear spring and damper (backlash is modeled with elasticity)",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "100000.0",
                            "quantity": "\"RotationalSpringConstant\"",
                            "unit": "\"N.m/rad\"",
                            "min": "Modelica.Constants.small"
                        },
                        "name": "c",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Spring constant (c > 0 required)"
                    },
                    {
                        "modifiers": {
                            "start": "0",
                            "quantity": "\"RotationalDampingConstant\"",
                            "unit": "\"N.m.s/rad\"",
                            "min": "0"
                        },
                        "name": "d",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Damping constant"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Angle\"",
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "min": "0"
                        },
                        "name": "b",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Total backlash"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "phi_rel0",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Unstretched spring angle"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "bMax",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Backlash in range bMin <= phi_rel - phi_rel0 <= bMax"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "bMin",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Backlash in range bMin <= phi_rel - phi_rel0 <= bMax"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.ElastoBacklash",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for the compliant connection of two rotational 1-dim. shaft flanges where the relative angle and speed are used as preferred states",
                "parameters": [
                    {
                        "modifiers": {
                            "displayUnit": "\"rad\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\"",
                            "min": "0.0"
                        },
                        "name": "phi_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of phi_rel (used for scaling)"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.BearingFriction",
        "components": [
            {
                "comment": "Coulomb friction in bearings",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "tau_pos",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,1]",
                        "fullName": "Real",
                        "description": "[w,tau] Positive sliding friction characteristic (w>=0)"
                    },
                    {
                        "modifiers": {
                            "min": "1"
                        },
                        "name": "peak",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "peak*tau_pos[1,2] = Maximum friction torque for w==0"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialFriction",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.BearingFriction",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with two rotational 1-dim. shaft flanges and a support used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupport",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {
                            "tau": "-flange_a.tau - flange_b.tau",
                            "modifications": "public",
                            "phi": "phi_support"
                        },
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model of Coulomb friction elements",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"rad/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w_small",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 10000000000.0,
                        "fullName": "Real",
                        "description": "Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialFriction",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.Brake",
        "components": [
            {
                "comment": "Brake based on Coulomb friction",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "mue_pos",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,0.5]",
                        "fullName": "Real",
                        "description": "[w,mue] positive sliding friction coefficient (w_rel>=0)"
                    },
                    {
                        "modifiers": {
                            "min": "1"
                        },
                        "name": "peak",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "peak*mue_pos[1,2] = maximum value of mue for w_rel==0"
                    },
                    {
                        "modifiers": {
                            "min": "0"
                        },
                        "name": "cgeo",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "Geometry constant containing friction distribution assumption"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"Force\"",
                            "unit": "\"N\"",
                            "min": "0"
                        },
                        "name": "fn_max",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Maximum normal force"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "f_normalized",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialFriction",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.Brake",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with two rotational 1-dim. shaft flanges and a support used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupport",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {
                            "tau": "-flange_a.tau - flange_b.tau",
                            "modifications": "public",
                            "phi": "phi_support"
                        },
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model of Coulomb friction elements",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"rad/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w_small",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 10000000000.0,
                        "fullName": "Real",
                        "description": "Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialFriction",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.Clutch",
        "components": [
            {
                "comment": "Clutch based on Coulomb friction",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "mue_pos",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,0.5]",
                        "fullName": "Real",
                        "description": "[w,mue] positive sliding friction coefficient (w_rel>=0)"
                    },
                    {
                        "modifiers": {
                            "min": "1"
                        },
                        "name": "peak",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "peak*mue_pos[1,2] = maximum value of mue for w_rel==0"
                    },
                    {
                        "modifiers": {
                            "min": "0"
                        },
                        "name": "cgeo",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "Geometry constant containing friction distribution assumption"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"Force\"",
                            "unit": "\"N\"",
                            "min": "0"
                        },
                        "name": "fn_max",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Maximum normal force"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "f_normalized",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Icons.Clutch",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialFriction",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.Clutch",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon of a clutch",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Icons.Clutch",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for the compliant connection of two rotational 1-dim. shaft flanges where the relative angle and speed are used as preferred states",
                "parameters": [
                    {
                        "modifiers": {
                            "displayUnit": "\"rad\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\"",
                            "min": "0.0"
                        },
                        "name": "phi_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of phi_rel (used for scaling)"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model of Coulomb friction elements",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"rad/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w_small",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 10000000000.0,
                        "fullName": "Real",
                        "description": "Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialFriction",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.OneWayClutch",
        "components": [
            {
                "comment": "Series connection of freewheel and clutch",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "mue_pos",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,0.5]",
                        "fullName": "Real",
                        "description": "[w,mue] positive sliding friction coefficient (w_rel>=0)"
                    },
                    {
                        "modifiers": {
                            "min": "1"
                        },
                        "name": "peak",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "peak*mue_pos[1,2] = maximum value of mue for w_rel==0"
                    },
                    {
                        "modifiers": {
                            "min": "0"
                        },
                        "name": "cgeo",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "Geometry constant containing friction distribution assumption"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "quantity": "\"Force\"",
                            "unit": "\"N\"",
                            "min": "0"
                        },
                        "name": "fn_max",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Maximum normal force"
                    },
                    {
                        "modifiers": {
                            "unit": "\"rad/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w_small",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 10000000000.0,
                        "fullName": "Real",
                        "description": "Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur)"
                    },
                    {
                        "modifiers": {},
                        "name": "peak2",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": ""
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "f_normalized",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Icons.Clutch",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.OneWayClutch",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon of a clutch",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Icons.Clutch",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for the compliant connection of two rotational 1-dim. shaft flanges where the relative angle and speed are used as preferred states",
                "parameters": [
                    {
                        "modifiers": {
                            "displayUnit": "\"rad\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\"",
                            "min": "0.0"
                        },
                        "name": "phi_nominal",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0.0001,
                        "fullName": "Real",
                        "description": "Nominal value of phi_rel (used for scaling)"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialCompliantWithRelativeStates",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.IdealGear",
        "components": [
            {
                "comment": "Ideal gear without inertia",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1"
                        },
                        "name": "ratio",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Transmission ratio (flange_a.phi/flange_b.phi)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Icons.Gear",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.IdealGear",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Rotational gear icon",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Icons.Gear",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with two rotational 1-dim. shaft flanges and a support used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupport",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {
                            "tau": "-flange_a.tau - flange_b.tau",
                            "modifications": "public",
                            "phi": "phi_support"
                        },
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.LossyGear",
        "components": [
            {
                "comment": "Gear with mesh efficiency and bearing friction (stuck/rolling possible)",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1"
                        },
                        "name": "ratio",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Transmission ratio (flange_a.phi/flange_b.phi)"
                    },
                    {
                        "modifiers": {},
                        "name": "lossTable",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,1,1,0,0]",
                        "fullName": "Real",
                        "description": "Array for mesh efficiencies and bearing friction depending on speed"
                    },
                    {
                        "modifiers": {},
                        "name": "interpolation_result_0",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": ""
                    },
                    {
                        "modifiers": {},
                        "name": "eta_mf1_0",
                        "isCyPhySafe": false,
                        "isPublic": false,
                        "value": "[1,1]",
                        "fullName": "Real",
                        "description": ""
                    },
                    {
                        "modifiers": {},
                        "name": "eta_mf2_0",
                        "isCyPhySafe": false,
                        "isPublic": false,
                        "value": "[1,2]",
                        "fullName": "Real",
                        "description": ""
                    },
                    {
                        "modifiers": {},
                        "name": "tau_bf1_0",
                        "isCyPhySafe": false,
                        "isPublic": false,
                        "value": "[1,3]",
                        "fullName": "Real",
                        "description": ""
                    },
                    {
                        "modifiers": {},
                        "name": "tau_bf2_0",
                        "isCyPhySafe": false,
                        "isPublic": false,
                        "value": "[1,4]",
                        "fullName": "Real",
                        "description": ""
                    },
                    {
                        "modifiers": {},
                        "name": "tau_bf_a_0",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": ""
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Icons.Gear",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.LossyGear",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Rotational gear icon",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Icons.Gear",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with two rotational 1-dim. shaft flanges and a support used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupport",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {
                            "tau": "-flange_a.tau - flange_b.tau",
                            "modifications": "public",
                            "phi": "phi_support"
                        },
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryTwoFlangesAndSupport2",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for textual modeling, i.e., for elementary models",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if heatPort is enabled"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-lossPower"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialElementaryConditionalHeatPortWithoutT",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.IdealPlanetary",
        "components": [
            {
                "comment": "Ideal planetary gear box",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "100 / 50"
                        },
                        "name": "ratio",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Number of ring_teeth/sun_teeth (e.g., ratio=100/50)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "sun",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "carrier",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "ring",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Components.IdealPlanetary",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.Gearbox",
        "components": [
            {
                "comment": "Realistic model of a gearbox (based on LossyGear)",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1"
                        },
                        "name": "ratio",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Transmission ratio (flange_a.phi/flange_b.phi)"
                    },
                    {
                        "modifiers": {},
                        "name": "lossTable",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,1,1,0,0]",
                        "fullName": "Real",
                        "description": "Array for mesh efficiencies and bearing friction depending on speed (see docu of LossyGear)"
                    },
                    {
                        "modifiers": {
                            "start": "100000.0",
                            "quantity": "\"RotationalSpringConstant\"",
                            "unit": "\"N.m/rad\"",
                            "min": "Modelica.Constants.small"
                        },
                        "name": "c",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Gear elasticity (spring constant)"
                    },
                    {
                        "modifiers": {
                            "start": "0",
                            "quantity": "\"RotationalDampingConstant\"",
                            "unit": "\"N.m.s/rad\"",
                            "min": "0"
                        },
                        "name": "d",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "(relative) gear damping"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Angle\"",
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "min": "0"
                        },
                        "name": "b",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Total backlash"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use phi_rel and w_rel as states"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Icons.Gearbox",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialTwoFlangesAndSupport",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialConditionalHeatPort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": [
                            {
                                "modifiers": {},
                                "name": "T",
                                "isCyPhySafe": true,
                                "isPublic": true,
                                "value": "293.15",
                                "fullName": null,
                                "description": ""
                            }
                        ]
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.Gearbox",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon of gear box",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Icons.Gearbox",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model for a component with two rotational 1-dim. shaft flanges and a support used for graphical modeling, i.e., the model is build up by drag-and-drop from elementary components",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupport",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flange_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flange_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {},
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {},
                        "name": "internalSupport",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialTwoFlangesAndSupport",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to dissipate losses, used for graphical modeling, i.e., for building models by drag-and-drop",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if HeatPort is enabled"
                    },
                    {
                        "modifiers": {
                            "start": "288.15",
                            "nominal": "300",
                            "displayUnit": "\"degC\"",
                            "min": "0.0",
                            "unit": "\"K\"",
                            "quantity": "\"ThermodynamicTemperature\""
                        },
                        "name": "T",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 293.15,
                        "fullName": "Real",
                        "description": "Fixed device temperature if useHeatPort = false"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {},
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {},
                        "name": "internalHeatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.PartialConditionalHeatPort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.IdealGearR2T",
        "components": [
            {
                "comment": "Gearbox transforming rotational into translational motion",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"rad/m\""
                        },
                        "name": "ratio",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Transmission ratio (flange_a.phi/flange_b.s)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.IdealGearR2T",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to transform rotational into translational motion",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupportR",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if rotational support flange enabled, otherwise implicitly grounded"
                    },
                    {
                        "modifiers": {},
                        "name": "useSupportT",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if translational support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flangeR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flangeT",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportT",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.Rotational.Components.IdealRollingWheel",
        "components": [
            {
                "comment": "Simple 1-dim. model of an ideal rolling wheel without inertia",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "0.3",
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "radius",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Wheel radius"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.Rotational.Components.IdealRollingWheel",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to transform rotational into translational motion",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useSupportR",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if rotational support flange enabled, otherwise implicitly grounded"
                    },
                    {
                        "modifiers": {},
                        "name": "useSupportT",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if translational support flange enabled, otherwise implicitly grounded"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "flangeR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "flangeT",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportR",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Support",
                        "modifiers": {},
                        "name": "supportT",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.Rotational.Interfaces.PartialElementaryRotationalToTranslational",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.Prismatic",
        "components": [
            {
                "comment": "Prismatic joint (1 translational degree-of-freedom, 2 potential states, optional axis flange)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useAxisFlange",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if axis flange is enabled"
                    },
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 0, 0],
                        "fullName": "Real",
                        "description": "Axis of translation resolved in frame_a (= same as in frame_b)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "boxWidthDirection",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 1, 0],
                        "fullName": "Real",
                        "description": "Vector in width direction of box, resolved in frame_a"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "boxWidth",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointWidth",
                        "fullName": "Real",
                        "description": "Width of prismatic joint box"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "boxHeight",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "boxWidth",
                        "fullName": "Real",
                        "description": "Height of prismatic joint box"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use distance s and v=der(s) as states"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "e",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Unit vector in direction of prismatic axis n"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "axis",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Translational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialElementaryJoint",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.Prismatic",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for elementary joints (has two frames + outer world + assert to guarantee that the joint is connected)",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialElementaryJoint",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.Revolute",
        "components": [
            {
                "comment": "Revolute joint (1 rotational degree-of-freedom, 2 potential states, optional axis flange)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useAxisFlange",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if axis flange is enabled"
                    },
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled (show axis as cylinder)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 1],
                        "fullName": "Real",
                        "description": "Axis of rotation resolved in frame_a (= same as in frame_b)"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderLength",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointLength",
                        "fullName": "Real",
                        "description": "Length of cylinder representing the joint axis"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderDiameter",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointWidth",
                        "fullName": "Real",
                        "description": "Diameter of cylinder representing the joint axis"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use joint angle phi and w=der(phi) as states"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "e",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_a",
                        "modifiers": {},
                        "name": "axis",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.Rotational.Interfaces.Flange_b",
                        "modifiers": {},
                        "name": "support",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.Revolute",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.RevolutePlanarLoopConstraint",
        "components": [
            {
                "comment": "Revolute joint that is described by 2 positional constraints for usage in a planar loop (the ambiguous cut-force perpendicular to the loop and the ambiguous cut-torques are set arbitrarily to zero)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled (show axis as cylinder)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 1],
                        "fullName": "Real",
                        "description": "Axis of rotation resolved in frame_a (= same as in frame_b)"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderLength",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointLength",
                        "fullName": "Real",
                        "description": "Length of cylinder representing the joint axis"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderDiameter",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointWidth",
                        "fullName": "Real",
                        "description": "Diameter of cylinder representing the joint axis"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "e",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "nnx_a",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Arbitrary vector that is not aligned with rotation axis n"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "ey_a",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Unit vector orthogonal to axis n of revolute joint, resolved in frame_a"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "ex_a",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Unit vector orthogonal to axis n of revolute joint and to ey_a, resolved in frame_a"
                    }
                ],
                "imports": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Frames.TransformationMatrices",
                        "id": "T",
                        "kind": "named"
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Types",
                        "id": "",
                        "kind": "qualified"
                    }
                ],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.RevolutePlanarLoopConstraint",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.Cylindrical",
        "components": [
            {
                "comment": "Cylindrical joint (2 degrees-of-freedom, 4 potential states)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled (show cylinder)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 0, 0],
                        "fullName": "Real",
                        "description": "Cylinder axis resolved in frame_a (= same as in frame_b)"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderDiameter",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointWidth",
                        "fullName": "Real",
                        "description": "Diameter of cylinder"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use joint coordinates (phi, s, w, v) as states"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.Cylindrical",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for components providing two frame connectors + outer world + assert to guarantee that the component is connected",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.Universal",
        "components": [
            {
                "comment": "Universal joint (2 degrees-of-freedom, 4 potential states)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n_a",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 0, 0],
                        "fullName": "Real",
                        "description": "Axis of revolute joint 1 resolved in frame_a"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n_b",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 1, 0],
                        "fullName": "Real",
                        "description": "Axis of revolute joint 2 resolved in frame_b"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderLength",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointLength",
                        "fullName": "Real",
                        "description": "Length of cylinders representing the joint axes"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderDiameter",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointWidth",
                        "fullName": "Real",
                        "description": "Diameter of cylinders representing the joint axes"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use joint coordinates (phi_a, phi_b, w_a, w_b) as states"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.Universal",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for components providing two frame connectors + outer world + assert to guarantee that the component is connected",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.Planar",
        "components": [
            {
                "comment": "Planar joint (3 degrees-of-freedom, 6 potential states)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 1],
                        "fullName": "Real",
                        "description": "Axis orthogonal to unconstrained plane, resolved in frame_a (= same as in frame_b)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n_x",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 0, 0],
                        "fullName": "Real",
                        "description": "Vector in direction of x-axis of plane, resolved in frame_a (n_x shall be orthogonal to n)"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderLength",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointLength",
                        "fullName": "Real",
                        "description": "Length of revolute cylinder"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "cylinderDiameter",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointWidth",
                        "fullName": "Real",
                        "description": "Diameter of revolute cylinder"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "boxWidth",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Width of prismatic joint boxes"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "boxHeight",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "boxWidth",
                        "fullName": "Real",
                        "description": "Height of prismatic joint boxes"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.prefer",
                        "fullName": "StateSelect",
                        "description": "Priority to use joint coordinates (s_x, s_y, phi, v_x, v_y, w) as states"
                    },
                    {
                        "modifiers": {},
                        "name": "ndim",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Integer",
                        "description": ""
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "e",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": ""
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.Planar",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for components providing two frame connectors + outer world + assert to guarantee that the component is connected",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.Spherical",
        "components": [
            {
                "comment": "Spherical joint (3 constraints and no potential states, or 3 degrees-of-freedom and 3 states)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled (show sphere)"
                    },
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "sphereDiameter",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultJointLength",
                        "fullName": "Real",
                        "description": "Diameter of sphere representing the spherical joint"
                    },
                    {
                        "modifiers": {},
                        "name": "angles_fixed",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if angles_start are used as initial values, else as guess values"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "angles_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Initial values of angles to rotate frame_a around 'sequence_start' axes into frame_b"
                    },
                    {
                        "modifiers": {
                            "max": " = {3,3,3}\n",
                            "min": " = {1,1,1}\n"
                        },
                        "name": "sequence_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 2, 3],
                        "fullName": "Integer",
                        "description": "Sequence of rotations to rotate frame_a into frame_b at initial time"
                    },
                    {
                        "modifiers": {},
                        "name": "w_rel_a_fixed",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if w_rel_a_start are used as initial values, else as guess values"
                    },
                    {
                        "modifiers": {
                            "unit": "\"rad/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w_rel_a_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Initial values of angular velocity of frame_b with respect to frame_a, resolved in frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "z_rel_a_fixed",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if z_rel_a_start are used as initial values, else as guess values"
                    },
                    {
                        "modifiers": {
                            "unit": "\"rad/s2\"",
                            "quantity": "\"AngularAcceleration\""
                        },
                        "name": "z_rel_a_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Initial values of angular acceleration z_rel_a = der(w_rel_a)"
                    },
                    {
                        "modifiers": {},
                        "name": "enforceStates",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if relative variables of spherical joint shall be used as states (StateSelect.always)"
                    },
                    {
                        "modifiers": {},
                        "name": "useQuaternions",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if quaternions shall be used as states otherwise use 3 angles as states (provided enforceStates=true)"
                    },
                    {
                        "modifiers": {
                            "max": " = {3,3,3}\n",
                            "min": " = {1,1,1}\n"
                        },
                        "name": "sequence_angleStates",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 2, 3],
                        "fullName": "Integer",
                        "description": "Sequence of rotations to rotate frame_a into frame_b around the 3 angles used as states"
                    },
                    {
                        "modifiers": {},
                        "name": "R_rel_start",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Modelica.Mechanics.MultiBody.Frames.Orientation",
                        "description": "Orientation object from frame_a to frame_b at initial time"
                    },
                    {
                        "modifiers": {},
                        "name": "Q_start",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Quaternion orientation object from frame_a to frame_b at initial time"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "phi_start",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Potential angle states at initial time"
                    }
                ],
                "imports": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Frames",
                        "id": "",
                        "kind": "qualified"
                    }
                ],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.Spherical",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for components providing two frame connectors + outer world + assert to guarantee that the component is connected",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.FreeMotion",
        "components": [
            {
                "comment": "Free motion joint (6 degrees-of-freedom, 12 potential states)",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled (show arrow from frame_a to frame_b)"
                    },
                    {
                        "modifiers": {},
                        "name": "angles_fixed",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if angles_start are used as initial values, else as guess values"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "angles_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Initial values of angles to rotate frame_a around 'sequence_start' axes into frame_b"
                    },
                    {
                        "modifiers": {
                            "max": " = {3,3,3}\n",
                            "min": " = {1,1,1}\n"
                        },
                        "name": "sequence_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 2, 3],
                        "fullName": "Integer",
                        "description": "Sequence of rotations to rotate frame_a into frame_b at initial time"
                    },
                    {
                        "modifiers": {},
                        "name": "w_rel_a_fixed",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if w_rel_a_start are used as initial values, else as guess values"
                    },
                    {
                        "modifiers": {
                            "unit": "\"rad/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w_rel_a_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Initial values of angular velocity of frame_b with respect to frame_a, resolved in frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "z_rel_a_fixed",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, if z_rel_a_start are used as initial values, else as guess values"
                    },
                    {
                        "modifiers": {
                            "unit": "\"rad/s2\"",
                            "quantity": "\"AngularAcceleration\""
                        },
                        "name": "z_rel_a_start",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Initial values of angular acceleration z_rel_a = der(w_rel_a)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "arrowDiameter",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "world.defaultArrowDiameter",
                        "fullName": "Real",
                        "description": "Diameter of arrow from frame_a to frame_b"
                    },
                    {
                        "modifiers": {},
                        "name": "enforceStates",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if relative variables between frame_a and frame_b shall be used as states"
                    },
                    {
                        "modifiers": {},
                        "name": "useQuaternions",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if quaternions shall be used as states otherwise use 3 angles as states"
                    },
                    {
                        "modifiers": {
                            "max": " = {3,3,3}\n",
                            "min": " = {1,1,1}\n"
                        },
                        "name": "sequence_angleStates",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 2, 3],
                        "fullName": "Integer",
                        "description": "Sequence of rotations to rotate frame_a into frame_b around the 3 angles used as states"
                    },
                    {
                        "modifiers": {},
                        "name": "R_rel_start",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Modelica.Mechanics.MultiBody.Frames.Orientation",
                        "description": "Orientation object from frame_a to frame_b at initial time"
                    },
                    {
                        "modifiers": {},
                        "name": "Q_start",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Quaternion orientation object from frame_a to frame_b at initial time"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "phi_start",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": "Potential angle states at initial time"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.FreeMotion",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for components providing two frame connectors + outer world + assert to guarantee that the component is connected",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.RollingWheel",
        "components": [
            {
                "comment": "Joint (no mass, no inertia) that describes an ideal rolling wheel (rolling on the plane z=0)",
                "parameters": [
                    {
                        "modifiers": {
                            "quantity": "\"Length\"",
                            "unit": "\"m\"",
                            "min": "0"
                        },
                        "name": "wheelRadius",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Wheel radius"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.always",
                        "fullName": "StateSelect",
                        "description": "Priority to use generalized coordinates as states"
                    }
                ],
                "imports": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Frames",
                        "id": "",
                        "kind": "qualified"
                    }
                ],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.RollingWheel",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Joints.GearConstraint",
        "components": [
            {
                "comment": "Ideal 3-dim. gearbox (arbitrary shaft directions)",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "2"
                        },
                        "name": "ratio",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Gear speed ratio"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n_a",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 0, 0],
                        "fullName": "Real",
                        "description": "Axis of rotation of shaft a (same coordinates in frame_a, frame_b, bearing)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1\""
                        },
                        "name": "n_b",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 0, 0],
                        "fullName": "Real",
                        "description": "Axis of rotation of shaft b (same coordinates in frame_a, frame_b, bearing)"
                    },
                    {
                        "modifiers": {
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "r_a",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Vector from frame bearing to frame_a resolved in bearing"
                    },
                    {
                        "modifiers": {
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "r_b",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [0, 0, 0],
                        "fullName": "Real",
                        "description": "Vector from frame bearing to frame_b resolved in bearing"
                    },
                    {
                        "modifiers": {},
                        "name": "stateSelect",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "StateSelect.default",
                        "fullName": "StateSelect",
                        "description": "Priority to use joint coordinates (phi_a, phi_b, w_a, w_b) as states"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "bearing",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Joints.GearConstraint",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base model for components providing two frame connectors + outer world + assert to guarantee that the component is connected",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Sensors.AbsoluteSensor",
        "components": [
            {
                "comment": "Measure absolute kinematic quantities of frame connector",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled (show arrow)"
                    },
                    {
                        "modifiers": {},
                        "name": "resolveInFrame",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameA.frame_a",
                        "fullName": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameA",
                        "description": "Frame in which vectors are resolved (world, frame_a, or frame_resolve)"
                    },
                    {
                        "modifiers": {},
                        "name": "get_r",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the absolute position vector of the origin of frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_v",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the absolute velocity of the origin of frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_a",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the absolute acceleration of the origin of frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_w",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the absolute angular velocity of frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_z",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the absolute angular acceleration of frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_angles",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the 3 rotation angles"
                    },
                    {
                        "modifiers": {
                            "max": " = {3,3,3}\n",
                            "min": " = {1,1,1}\n"
                        },
                        "name": "sequence",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 2, 3],
                        "fullName": "Integer",
                        "description": "If get_angles=true: Angles are returned to rotate world frame around axes sequence[1], sequence[2] and finally sequence[3] into frame_a"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "guessAngle1",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "If get_angles=true: Select angles[1] such that abs(angles[1] - guessAngle1) is a minimum"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "r",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m/s\"",
                            "quantity": "\"Velocity\""
                        },
                        "name": "v",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m/s2\"",
                            "quantity": "\"Acceleration\""
                        },
                        "name": "a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "angles",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"1/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"1/s2\"",
                            "quantity": "\"AngularAcceleration\""
                        },
                        "name": "z",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve",
                        "modifiers": {},
                        "name": "frame_resolve",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.AbsoluteSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial absolute sensor model for sensors defined by components",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Sensors.RelativeSensor",
        "components": [
            {
                "comment": "Measure relative kinematic quantities between two frame connectors",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "animation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": true,
                        "fullName": "Boolean",
                        "description": "= true, if animation shall be enabled (show arrow)"
                    },
                    {
                        "modifiers": {},
                        "name": "resolveInFrame",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameAB.frame_a",
                        "fullName": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameAB",
                        "description": "Frame in which vectors are resolved before differentiation (world, frame_a, frame_b, or frame_resolve)"
                    },
                    {
                        "modifiers": {},
                        "name": "get_r_rel",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the relative position vector from the origin of frame_a to frame_b"
                    },
                    {
                        "modifiers": {},
                        "name": "get_v_rel",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the relative velocity of the origin of frame_b with respect to frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_a_rel",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the relative acceleration of the origin of frame_b with respect to frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_w_rel",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the relative angular velocity of frame_b with respect to frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_z_rel",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the relative angular acceleration of frame_b with respect to frame_a"
                    },
                    {
                        "modifiers": {},
                        "name": "get_angles",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "= true, to measure the 3 rotation angles"
                    },
                    {
                        "modifiers": {
                            "max": " = {3,3,3}\n",
                            "min": " = {1,1,1}\n"
                        },
                        "name": "sequence",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 2, 3],
                        "fullName": "Integer",
                        "description": "If get_angles=true: Angles are returned to rotate frame_a around axes sequence[1], sequence[2] and finally sequence[3] into frame_b"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "guessAngle1",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "If get_angles=true: Select angles[1] such that abs(angles[1] - guessAngle1) is a minimum"
                    },
                    {
                        "modifiers": {},
                        "name": "resolveInFrameAfterDifferentiation",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "resolveInFrame",
                        "fullName": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameAB",
                        "description": "Frame in which vectors are resolved after differentiation (world, frame_a, frame_b, or frame_resolve)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve",
                        "modifiers": {},
                        "name": "frame_resolve",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "r_rel",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m/s\"",
                            "quantity": "\"Velocity\""
                        },
                        "name": "v_rel",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m/s2\"",
                            "quantity": "\"Acceleration\""
                        },
                        "name": "a_rel",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "angles",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"1/s\"",
                            "quantity": "\"AngularVelocity\""
                        },
                        "name": "w_rel",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"1/s2\"",
                            "quantity": "\"AngularAcceleration\""
                        },
                        "name": "z_rel",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialRelativeSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.RelativeSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial relative sensor model for sensors defined by components",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_b",
                        "modifiers": {},
                        "name": "frame_b",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialRelativeSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Sensors.AbsolutePosition",
        "components": [
            {
                "comment": "Measure absolute position vector of the origin of a frame connector",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "resolveInFrame",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameA.frame_a",
                        "fullName": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameA",
                        "description": "Frame in which output vector r shall be resolved (world, frame_a, or frame_resolve)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m\"",
                            "quantity": "\"Length\""
                        },
                        "name": "r",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve",
                        "modifiers": {},
                        "name": "frame_resolve",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.AbsolutePosition",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial absolute sensor model for sensors defined by components",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Sensors.AbsoluteVelocity",
        "components": [
            {
                "comment": "Measure absolute velocity vector of origin of frame connector",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "resolveInFrame",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameA.frame_a",
                        "fullName": "Modelica.Mechanics.MultiBody.Types.ResolveInFrameA",
                        "description": "Frame in which output vector v shall be resolved (world, frame_a, or frame_resolve)"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"m/s\"",
                            "quantity": "\"Velocity\""
                        },
                        "name": "v",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve",
                        "modifiers": {},
                        "name": "frame_resolve",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.AbsoluteVelocity",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial absolute sensor model for sensors defined by components",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Mechanics.MultiBody.Sensors.AbsoluteAngles",
        "components": [
            {
                "comment": "Measure absolute angles between frame connector and the world frame",
                "parameters": [
                    {
                        "modifiers": {
                            "max": " = {3,3,3}\n",
                            "min": " = {1,1,1}\n"
                        },
                        "name": "sequence",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": [1, 2, 3],
                        "fullName": "Integer",
                        "description": "Angles are returned to rotate world frame around axes sequence[1], sequence[2] and finally sequence[3] into frame_a"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "guessAngle1",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Select angles[1] such that abs(angles[1] - guessAngle1) is a minimum"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Mechanics.MultiBody.Interfaces.Frame_a",
                        "modifiers": {},
                        "name": "frame_a",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "angles",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Mechanics.MultiBody.Sensors.AbsoluteAngles",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Basic.Ground",
        "components": [
            {
                "comment": "Ground node",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.Pin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Basic.Ground",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Basic.Resistor",
        "components": [
            {
                "comment": "Ideal linear electrical resistor",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"Ohm\"",
                            "quantity": "\"Resistance\""
                        },
                        "name": "R",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Resistance at temperature T_ref"
                    },
                    {
                        "modifiers": {
                            "start": "288.15",
                            "nominal": "300",
                            "displayUnit": "\"degC\"",
                            "min": "0.0",
                            "unit": "\"K\"",
                            "quantity": "\"ThermodynamicTemperature\""
                        },
                        "name": "T_ref",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 300.15,
                        "fullName": "Real",
                        "description": "Reference temperature"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1/K\"",
                            "quantity": "\"LinearTemperatureCoefficient\""
                        },
                        "name": "alpha",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": [
                            {
                                "modifiers": {},
                                "name": "T",
                                "isCyPhySafe": true,
                                "isPublic": true,
                                "value": "T_ref",
                                "fullName": null,
                                "description": ""
                            }
                        ]
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Basic.Resistor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to describe the power loss via a thermal network",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if HeatPort is enabled"
                    },
                    {
                        "modifiers": {
                            "start": "288.15",
                            "nominal": "300",
                            "displayUnit": "\"degC\"",
                            "min": "0.0",
                            "unit": "\"K\"",
                            "quantity": "\"ThermodynamicTemperature\""
                        },
                        "name": "T",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 293.15,
                        "fullName": "Real",
                        "description": "Fixed device temperature if useHeatPort = false"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-LossPower",
                            "T": "(start = T) = T_heatPort\n",
                            "T.start": "T"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Basic.HeatingResistor",
        "components": [
            {
                "comment": "Temperature dependent electrical resistor",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"Ohm\"",
                            "quantity": "\"Resistance\""
                        },
                        "name": "R_ref",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Resistance at temperature T_ref"
                    },
                    {
                        "modifiers": {
                            "start": "288.15",
                            "nominal": "300",
                            "displayUnit": "\"degC\"",
                            "min": "0.0",
                            "unit": "\"K\"",
                            "quantity": "\"ThermodynamicTemperature\""
                        },
                        "name": "T_ref",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 300.15,
                        "fullName": "Real",
                        "description": "Reference temperature"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1/K\"",
                            "quantity": "\"LinearTemperatureCoefficient\""
                        },
                        "name": "alpha",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Temperature coefficient of resistance (R = R_ref*(1 + alpha*(heatPort.T - T_ref))"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": [
                            {
                                "modifiers": {},
                                "name": "T",
                                "isCyPhySafe": true,
                                "isPublic": true,
                                "value": "T_ref",
                                "fullName": null,
                                "description": ""
                            },
                            {
                                "modifiers": {},
                                "name": "useHeatPort",
                                "isCyPhySafe": true,
                                "isPublic": true,
                                "value": "true",
                                "fullName": null,
                                "description": ""
                            }
                        ]
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Basic.HeatingResistor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to describe the power loss via a thermal network",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if HeatPort is enabled"
                    },
                    {
                        "modifiers": {
                            "start": "288.15",
                            "nominal": "300",
                            "displayUnit": "\"degC\"",
                            "min": "0.0",
                            "unit": "\"K\"",
                            "quantity": "\"ThermodynamicTemperature\""
                        },
                        "name": "T",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 293.15,
                        "fullName": "Real",
                        "description": "Fixed device temperature if useHeatPort = false"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-LossPower",
                            "T": "(start = T) = T_heatPort\n",
                            "T.start": "T"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Basic.Conductor",
        "components": [
            {
                "comment": "Ideal linear electrical conductor",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"S\"",
                            "quantity": "\"Conductance\""
                        },
                        "name": "G",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Conductance at temperature T_ref"
                    },
                    {
                        "modifiers": {
                            "start": "288.15",
                            "nominal": "300",
                            "displayUnit": "\"degC\"",
                            "min": "0.0",
                            "unit": "\"K\"",
                            "quantity": "\"ThermodynamicTemperature\""
                        },
                        "name": "T_ref",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 300.15,
                        "fullName": "Real",
                        "description": "Reference temperature"
                    },
                    {
                        "modifiers": {
                            "unit": "\"1/K\"",
                            "quantity": "\"LinearTemperatureCoefficient\""
                        },
                        "name": "alpha",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Temperature coefficient of conductance (G_actual = G_ref/(1 + alpha*(T_heatPort - T_ref))"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": [
                            {
                                "modifiers": {},
                                "name": "T",
                                "isCyPhySafe": true,
                                "isPublic": true,
                                "value": "T_ref",
                                "fullName": null,
                                "description": ""
                            }
                        ]
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Basic.Conductor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Partial model to include a conditional HeatPort in order to describe the power loss via a thermal network",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "useHeatPort",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": false,
                        "fullName": "Boolean",
                        "description": "=true, if HeatPort is enabled"
                    },
                    {
                        "modifiers": {
                            "start": "288.15",
                            "nominal": "300",
                            "displayUnit": "\"degC\"",
                            "min": "0.0",
                            "unit": "\"K\"",
                            "quantity": "\"ThermodynamicTemperature\""
                        },
                        "name": "T",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 293.15,
                        "fullName": "Real",
                        "description": "Fixed device temperature if useHeatPort = false"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a",
                        "modifiers": {
                            "modifications": "public",
                            "Q_flow": "-LossPower",
                            "T": "(start = T) = T_heatPort\n",
                            "T.start": "T"
                        },
                        "name": "heatPort",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Basic.Capacitor",
        "components": [
            {
                "comment": "Ideal linear electrical capacitor",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "min": "0",
                            "unit": "\"F\"",
                            "quantity": "\"Capacitance\""
                        },
                        "name": "C",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Capacitance"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {
                            "v.start": "0"
                        },
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Basic.Capacitor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Basic.Inductor",
        "components": [
            {
                "comment": "Ideal linear electrical inductor",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"H\"",
                            "quantity": "\"Inductance\""
                        },
                        "name": "L",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Inductance"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {
                            "i.start": "0"
                        },
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Basic.Inductor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Basic.SaturatingInductor",
        "components": [
            {
                "comment": "Simple model of an inductor with saturation",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"A\"",
                            "quantity": "\"ElectricCurrent\""
                        },
                        "name": "Inom",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Nominal current"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"H\"",
                            "quantity": "\"Inductance\""
                        },
                        "name": "Lnom",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Nominal inductance at Nominal current"
                    },
                    {
                        "modifiers": {
                            "start": "2 * Lnom",
                            "unit": "\"H\"",
                            "quantity": "\"Inductance\""
                        },
                        "name": "Lzer",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Inductance near current=0"
                    },
                    {
                        "modifiers": {
                            "start": "Lnom / 2",
                            "unit": "\"H\"",
                            "quantity": "\"Inductance\""
                        },
                        "name": "Linf",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Inductance at large currents"
                    },
                    {
                        "modifiers": {
                            "start": "Inom / 10",
                            "fixed": "false",
                            "unit": "\"A\"",
                            "quantity": "\"ElectricCurrent\""
                        },
                        "name": "Ipar",
                        "isCyPhySafe": true,
                        "isPublic": false,
                        "value": "",
                        "fullName": "Real",
                        "description": ""
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Basic.SaturatingInductor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sensors.PotentialSensor",
        "components": [
            {
                "comment": "Sensor to measure the potential",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"V\""
                        },
                        "name": "phi",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sensors.PotentialSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sensors.VoltageSensor",
        "components": [
            {
                "comment": "Sensor to measure the voltage between two pins",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"V\""
                        },
                        "name": "v",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sensors.VoltageSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sensors.CurrentSensor",
        "components": [
            {
                "comment": "Sensor to measure the current in a branch",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"A\""
                        },
                        "name": "i",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sensors.CurrentSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sensors.PowerSensor",
        "components": [
            {
                "comment": "Sensor to measure the power",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "pc",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "nc",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "pv",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "nv",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"W\""
                        },
                        "name": "power",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Icons.RotationalSensor",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sensors.PowerSensor",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Icon representing a round measurement device",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Icons.RotationalSensor",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sources.SignalVoltage",
        "components": [
            {
                "comment": "Generic voltage source using the input signal as source voltage",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {
                            "modifications": "public",
                            "unit": "\"V\""
                        },
                        "name": "v",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Sources.SignalVoltage",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sources.ConstantVoltage",
        "components": [
            {
                "comment": "Source for constant voltage",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "V",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Value of constant voltage"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sources.ConstantVoltage",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sources.StepVoltage",
        "components": [
            {
                "comment": "Step voltage source",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "V",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Height of step"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sources.StepVoltage",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Interface for voltage sources",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "offset",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Voltage offset"
                    },
                    {
                        "modifiers": {
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "startTime",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Time offset"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sources.RampVoltage",
        "components": [
            {
                "comment": "Ramp voltage source",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "V",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Height of ramp"
                    },
                    {
                        "modifiers": {
                            "start": "2",
                            "quantity": "\"Time\"",
                            "unit": "\"s\"",
                            "min": "Modelica.Constants.small"
                        },
                        "name": "duration",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Duration of ramp"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sources.RampVoltage",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Interface for voltage sources",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "offset",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Voltage offset"
                    },
                    {
                        "modifiers": {
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "startTime",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Time offset"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sources.SineVoltage",
        "components": [
            {
                "comment": "Sine voltage source",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "V",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Amplitude of sine wave"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "phase",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Phase of sine wave"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"Hz\"",
                            "quantity": "\"Frequency\""
                        },
                        "name": "freqHz",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Frequency of sine wave"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sources.SineVoltage",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Interface for voltage sources",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "offset",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Voltage offset"
                    },
                    {
                        "modifiers": {
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "startTime",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Time offset"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sources.TableVoltage",
        "components": [
            {
                "comment": "Voltage source by linear interpolation in a table",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "table",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": "[0,0;1,1;2,4]",
                        "fullName": "Real",
                        "description": "Table matrix (time = first column, voltage = second column)"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sources.TableVoltage",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Interface for voltage sources",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "offset",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Voltage offset"
                    },
                    {
                        "modifiers": {
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "startTime",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Time offset"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Electrical.Analog.Sources.SawToothVoltage",
        "components": [
            {
                "comment": "Saw tooth voltage source",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "V",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Amplitude of saw tooth"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "period",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Time for one period"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Sources.SawToothVoltage",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Interface for voltage sources",
                "parameters": [
                    {
                        "modifiers": {
                            "unit": "\"V\"",
                            "quantity": "\"ElectricPotential\""
                        },
                        "name": "offset",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Voltage offset"
                    },
                    {
                        "modifiers": {
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "startTime",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Time offset"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Electrical.Analog.Interfaces.VoltageSource",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Component with two electrical pins p and n and current i from p to n",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.PositivePin",
                        "modifiers": {},
                        "name": "p",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Electrical.Analog.Interfaces.NegativePin",
                        "modifiers": {},
                        "name": "n",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Electrical.Analog.Interfaces.OnePort",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Blocks.Sources.Constant",
        "components": [
            {
                "comment": "Generate constant signal of type Real",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1"
                        },
                        "name": "k",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Constant output value"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.SO",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Sources.Constant",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Single Output continuous control block",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {},
                        "name": "y",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Icons.Block",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Interfaces.SO",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Basic graphical layout of input/output block",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Blocks.Icons.Block",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Blocks.Sources.Step",
        "components": [
            {
                "comment": "Generate step signal of type Real",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "height",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "Height of step"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.SignalSource",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Sources.Step",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Base class for continuous signal source",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "offset",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Offset of output signal y"
                    },
                    {
                        "modifiers": {
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "startTime",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Output y = offset for time < startTime"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.SO",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Interfaces.SignalSource",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Single Output continuous control block",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {},
                        "name": "y",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Icons.Block",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Interfaces.SO",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Basic graphical layout of input/output block",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Blocks.Icons.Block",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Blocks.Sources.Sine",
        "components": [
            {
                "comment": "Generate sine signal",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "amplitude",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Real",
                        "description": "Amplitude of sine wave"
                    },
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"Hz\"",
                            "quantity": "\"Frequency\""
                        },
                        "name": "freqHz",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Frequency of sine wave"
                    },
                    {
                        "modifiers": {
                            "displayUnit": "\"deg\"",
                            "unit": "\"rad\"",
                            "quantity": "\"Angle\""
                        },
                        "name": "phase",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Phase of sine wave"
                    },
                    {
                        "modifiers": {},
                        "name": "offset",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Offset of output signal"
                    },
                    {
                        "modifiers": {
                            "unit": "\"s\"",
                            "quantity": "\"Time\""
                        },
                        "name": "startTime",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": 0,
                        "fullName": "Real",
                        "description": "Output = offset for time < startTime"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.SO",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Sources.Sine",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Single Output continuous control block",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {},
                        "name": "y",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Icons.Block",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Interfaces.SO",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Basic graphical layout of input/output block",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Blocks.Icons.Block",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Blocks.Math.Sum",
        "components": [
            {
                "comment": "Output the sum of the elements of the input vector",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "k",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Optional: sum coefficients"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.MISO",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Math.Sum",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Multiple Input Single Output continuous control block",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "nin",
                        "isCyPhySafe": false,
                        "isPublic": true,
                        "value": 1,
                        "fullName": "Integer",
                        "description": "Number of inputs"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "u",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {},
                        "name": "y",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Icons.Block",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Interfaces.MISO",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Basic graphical layout of input/output block",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Blocks.Icons.Block",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Blocks.Math.Gain",
        "components": [
            {
                "comment": "Output the product of a gain value with the input signal",
                "parameters": [
                    {
                        "modifiers": {
                            "start": "1",
                            "unit": "\"1\""
                        },
                        "name": "k",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Gain value multiplied with input signal"
                    }
                ],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "u",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {},
                        "name": "y",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [],
                "fullName": "Modelica.Blocks.Math.Gain",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    },
    {
        "exportedComponentClass": "Modelica.Blocks.Math.Add",
        "components": [
            {
                "comment": "Output the sum of the two inputs",
                "parameters": [
                    {
                        "modifiers": {},
                        "name": "k1",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Gain of upper input"
                    },
                    {
                        "modifiers": {},
                        "name": "k2",
                        "isCyPhySafe": true,
                        "isPublic": true,
                        "value": "",
                        "fullName": "Real",
                        "description": "Gain of lower input"
                    }
                ],
                "imports": [],
                "connectors": [],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.SI2SO",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Math.Add",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "2 Single Input / 1 Single Output continuous control block",
                "parameters": [],
                "imports": [],
                "connectors": [
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "u1",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealInput",
                        "modifiers": {},
                        "name": "u2",
                        "parameters": [],
                        "redeclare_parameters": []
                    },
                    {
                        "fullName": "Modelica.Blocks.Interfaces.RealOutput",
                        "modifiers": {},
                        "name": "y",
                        "parameters": [],
                        "redeclare_parameters": []
                    }
                ],
                "extends": [
                    {
                        "fullName": "Modelica.Blocks.Icons.Block",
                        "modifiers": {},
                        "redeclare_parameters": [],
                        "parameters": []
                    }
                ],
                "fullName": "Modelica.Blocks.Interfaces.SI2SO",
                "packages": [],
                "redeclare_parameters": []
            },
            {
                "comment": "Basic graphical layout of input/output block",
                "parameters": [],
                "imports": [],
                "connectors": [],
                "extends": [],
                "fullName": "Modelica.Blocks.Icons.Block",
                "packages": [],
                "redeclare_parameters": []
            }
        ]
    }
]