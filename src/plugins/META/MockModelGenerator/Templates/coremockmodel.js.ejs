/**
* Generated by MockModelGenerator from webgme on <%= date %>.
*/

define(['mocks/CoreMock'], function (CoreMock) {
    var core = new CoreMock(<%=timeOut%>),
        META;

    META = createMETATypesTests(core);

    var <%=activeNode.ID%> = core.createNode({base: META.<%=activeNode.metaType%>, parent: core._rootNode});
    core.setAttribute(<%=activeNode.ID%>, 'name', '<%=activeNode.name%>');

<%
var nodeData, i;
for (i = 0; i < modelNodes.length; i += 1) {
    nodeData = modelNodes[i];
%>
    var <%=nodeData.ID%> = core.createNode({
        base: META.<%=nodeData.metaType%>,
        parent: <%=nodeData.parentID%>
    });
    core.setAttribute(<%=nodeData.ID%>, 'name', '<%=nodeData.name%>');
<%}%>

    function createMETATypesTests (core) {
        var meta = {},
        options = {},
        node;
        // FIXME: This does not account for inheritance at this stage.
<%
for (i = 0; i < metaNodes.length; i += 1) {
    nodeData = metaNodes[i];
%>
        node = core.createNode(options);
        core.setAttribute(node, 'name', '<%- nodeData.name %>');
        meta.<%- nodeData.name %> = node;
<%}%>
        return meta;
    }

    return {
        core: core,
        META: META
    };
});