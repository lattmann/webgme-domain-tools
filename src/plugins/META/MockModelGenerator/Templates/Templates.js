/* Generated file based on ejs templates */
define([], function() {
    return {
    "meta.js.ejs": "/**\r\n* Generated by MockModelGenerator from webgme on <%= date %>.\r\n*/\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n    return function (core) {\r\n        var meta = {};\r\n<%\r\nvar nodeData, i;\r\nfor (i = 0; i < metaNodes.length; i += 1) {\r\n    nodeData = metaNodes[i];\r\n    if (nodeData.base) {%>\r\n        meta.<%= nodeData.name %> = core.createNode({base: meta.<%= nodeData.base %>});\r\n<%} else {%>\r\n        meta.<%= nodeData.name %> = core.createNode({});\r\n<%}%>        core.setAttribute(meta.<%= nodeData.name%>, 'name', '<%= nodeData.name %>');\r\n<%}%>\r\n        return meta;\r\n    };\r\n});",
    "model.js.ejs": "/**\r\n* Generated by MockModelGenerator from webgme on <%= date %>.\r\n*/\r\n\r\ndefine(['mocks/CoreMock', './META'], function (CoreMock, createMeta) {\r\n    'use strict';\r\n    var core = new CoreMock(<%=timeOut%>),\r\n        META = createMeta(core);\r\n\r\n    var <%=activeNode.ID%> = core.createNode({base: META.<%=activeNode.metaType%>, parent: core._rootNode});\r\n    core.setAttribute(<%=activeNode.ID%>, 'name', '<%=activeNode.name%>');\r\n<%\r\nvar nodeData, i;\r\nfor (i = 0; i < modelNodes.length; i += 1) {\r\n    nodeData = modelNodes[i];\r\n%>\r\n    var <%=nodeData.ID%> = core.createNode({\r\n        base: META.<%=nodeData.metaType%>,\r\n        parent: <%=nodeData.parentID%>\r\n    });\r\n    core.setAttribute(<%=nodeData.ID%>, 'name', '<%=nodeData.name%>');\r\n<%}%>\r\n\r\n    return {\r\n        core: core,\r\n        META: META,\r\n        activeNode: <%=activeNode.ID%>\r\n    };\r\n});"
}});