/* Generated file based on ejs templates */
define([], function() {
    return {
    "meta.js.ejs": "/**\n* Generated by MockModelGenerator from webgme on <%= date %>.\n*/\n\ndefine([], function () {\n    'use strict';\n    return function (core) {\n        var meta = {};\n<%\nvar nodeData, i;\nfor (i = 0; i < metaNodes.length; i += 1) {\n    nodeData = metaNodes[i];\n    if (nodeData.base) {%>\n        meta.<%= nodeData.name %> = core.createNode({base: meta.<%= nodeData.base %>});\n<%} else {%>\n        meta.<%= nodeData.name %> = core.createNode({});\n<%}%>        core.setAttribute(meta.<%= nodeData.name%>, 'name', '<%= nodeData.name %>');\n<%}%>\n        return meta;\n    };\n});",
    "model.js.ejs": "/* global define,require */\n/**\n* Generated by MockModelGenerator from webgme on <%= date %>.\n*/\n<%\nvar nodeData, pointerData,\n    i, key, val, q;%>\ndefine(['mocks/CoreMock', './META'], function (CoreMock, createMeta) {\n    'use strict';\n    var core = new CoreMock(<%=timeOut%>),\n        META = createMeta(core),\n        options;\n\n    options = {\n        base: <%if (activeNode.baseIsMeta) {%>META.<%=activeNode.metaType%><%}else{%>null<%}%>,\n        parent: core._rootNode,\n        attr: {\n<%\n\nfor (key in activeNode.attr) {\n    if (activeNode.attr.hasOwnProperty(key)){\n        val = activeNode.attr[key];\n        q = typeof val === 'string';\n%>            '<%=key%>': <%if (q) {%>'<%=val%>'<%}else{%><%=val%><%}%>,\n<%}}%>        }\n    };\n    var <%=activeNode.ID%> = core.createNode(options);\n<%\nfor (i = 0; i < modelNodes.length; i += 1) {\n    nodeData = modelNodes[i];\n%>\n    options = {\n        base: <%if (nodeData.baseIsMeta) {%>META.<%=nodeData.metaType%><%}else{%>null<%}%>,\n        parent: <%=nodeData.parentID%>,\n        attr: {\n<%  for (key in nodeData.attr) {\n        if (nodeData.attr.hasOwnProperty(key)){\n            val = nodeData.attr[key];\n            q = typeof val === 'string';\n%>            '<%=key%>': <%if (q) {%>'<%=val%>'<%}else{%><%=val%><%}%>,\n<%}}%>        }\n    };\n    var <%=nodeData.ID%> = core.createNode(options);\n<%}%>\n\n// ---------------------- Bases for nodes with non-meta bases -------------------------\n<%\nfor (key in basePairs) {\n    if (basePairs.hasOwnProperty(key)) {\n%>    <%=key%>.pointers.base = core.getPath(<%=basePairs[key]%>);\n<%\n    }\n}%>\n// ---------------------- Pointers (e.g. connections) ---------------------------------\n<%\nfor (i = 0; i < pointers.length; i+= 1) {\n    pointerData = pointers[i];\n%>    core.setPointer(<%=pointerData.owner%>, '<%=pointerData.name%>', <%=pointerData.pointsTo%>);\n<%\n}%>\n    return {\n        core: core,\n        META: META,\n        activeNode: <%=activeNode.ID%>\n    };\n});"
}});